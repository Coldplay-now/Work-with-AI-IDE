name: Release Quality Tools

on:
  push:
    tags:
      - 'tools-v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Tools version number (e.g., 1.0.0)'
        required: true
        type: string

jobs:
  release-tools:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Extract version from tag
      id: extract_version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/tools-v}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
        
    - name: Test quality tools
      run: |
        cd quality-tools
        npm install
        npm test
        
    - name: Prepare tools release
      run: |
        python scripts/prepare-release.py tools ${{ steps.extract_version.outputs.version }}
        
    - name: Get release info
      id: release_info
      run: |
        if [ -f "temp_release/RELEASE_INFO.json" ]; then
          DESCRIPTION=$(python -c "import json; print(json.load(open('temp_release/RELEASE_INFO.json'))['description'])")
          echo "description=$DESCRIPTION" >> $GITHUB_OUTPUT
        else
          echo "description=AI IDE开发指南质量工具发布" >> $GITHUB_OUTPUT
        fi
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: tools-v${{ steps.extract_version.outputs.version }}
        release_name: Quality Tools v${{ steps.extract_version.outputs.version }}
        body: |
          ## AI IDE开发指南质量工具 v${{ steps.extract_version.outputs.version }}
          
          ${{ steps.release_info.outputs.description }}
          
          ### 包含工具
          - 🔧 **质量检查工具** (quality-tools/)
            - 代码块格式修复
            - 表格格式修复  
            - Mermaid图表优化
            - 文档结构修复
            - 术语一致性检查
            - 性能和可访问性验证
          - 📜 **自动化脚本** (scripts/)
            - 格式标准化
            - 质量验证
            - 发布准备
          
          ### 主要功能
          - ✅ 全面的文档质量检查
          - 🔄 自动化问题修复
          - 📊 详细的质量报告
          - 🚀 部署和发布支持
          - 📈 持续质量监控
          
          ### 安装和使用
          ```bash
          # 解压工具包
          unzip ai-ide-guide-v${{ steps.extract_version.outputs.version }}-tools.zip
          cd quality-tools
          
          # 安装依赖
          npm install
          
          # 运行质量检查
          node src/cli.js verify-comprehensive
          
          # 生成质量报告
          node src/cli.js generate-final-report
          ```
          
          ### 系统要求
          - Node.js >= 16.0.0
          - Python >= 3.8
          - Git (用于版本控制功能)
          
          适用于：文档维护团队、质量保证团队、DevOps工程师
        draft: false
        prerelease: false
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ai-ide-guide-v${{ steps.extract_version.outputs.version }}-tools.zip
        asset_name: ai-ide-guide-v${{ steps.extract_version.outputs.version }}-tools.zip
        asset_content_type: application/zip
        
    - name: Cleanup
      run: |
        rm -f ai-ide-guide-v${{ steps.extract_version.outputs.version }}-tools.zip
        rm -rf temp_release/